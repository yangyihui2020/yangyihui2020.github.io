<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/25/hello-world/"/>
    <url>/2025/02/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo搭建博客实现多端同步</title>
    <link href="/2025/02/25/essays/Hexo/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5/"/>
    <url>/2025/02/25/essays/Hexo/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="基于hexo-github实现博客撰写的多端同步功能"><a href="#基于hexo-github实现博客撰写的多端同步功能" class="headerlink" title="基于hexo+github实现博客撰写的多端同步功能"></a>基于hexo+github实现博客撰写的多端同步功能</h1><p>hexo 本身自带的同步功能<code>hexo d</code>上传的只是网页部署文件，未上传网页源文件，所以如果我们要在另一台设备上对博客进行修改的话就会遇到困难。我们可以在在github的blog仓库新建一个分支，存储源文件，然后在不同设备间同步源文件。这样就可以实现博客在不同设备上的同步了。</p><h2 id="github对应的仓库新建分支"><a href="#github对应的仓库新建分支" class="headerlink" title="github对应的仓库新建分支"></a>github对应的仓库新建分支</h2><p>首先你需要在你博客对应的github仓库(比如我的就是<code>https://github.com/yangyihui2020/yangyihui2020.github.io)</code>新建分支<code>hexo</code>。</p><h2 id="在已有博客文件的旧设备上执行的操作-："><a href="#在已有博客文件的旧设备上执行的操作-：" class="headerlink" title="在已有博客文件的旧设备上执行的操作 ："></a>在已有博客文件的旧设备上执行的操作 ：</h2><p>然后在本地任意目录下执行 <code>git clone</code>。并切换到对应分支：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git clone git@github<span class="hljs-selector-class">.com</span>:yangyihui2020/yangyihui2020<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span><br>cd yangyihui2020<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><br>git <span class="hljs-selector-tag">switch</span> hexo<br></code></pre></td></tr></table></figure><p>然后删除掉仓库目录（比如我的就是<code>yangyihui2020.github.io</code>)下除去.git之外的所有文件，并将原博客目录下的所有文件复制到该目录下。</p><p>然后上传到hexo分支</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> .<br><span class="hljs-symbol">git</span> commit -m <span class="hljs-string">&quot;新建hexo分支&quot;</span><br><span class="hljs-symbol">git</span> <span class="hljs-keyword">push</span> <br></code></pre></td></tr></table></figure><h2 id="在新设备上执行的操作-："><a href="#在新设备上执行的操作-：" class="headerlink" title="在新设备上执行的操作 ："></a>在新设备上执行的操作 ：</h2><p>在新设备，你需要提前配置好hexo所需要的环境。可以参考<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a> 。</p><p>然后在任意目录下新建一个目录<code>blogs</code>(这个名字随意),进入该目录执行<code>hexo init</code>。<br>然后清空该目录的文件，并执行<code>git clone</code>并切换到对应的分支:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git clone git@github<span class="hljs-selector-class">.com</span>:yangyihui2020/yangyihui2020<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span><br>git <span class="hljs-selector-tag">switch</span> hexo<br></code></pre></td></tr></table></figure><p>然后你就可以在不同设备上实现hexo博客的源文件共享了。</p><div class="note note-info">            <p>注意，每次写博客之前最好执行<code>git pull</code>，上传网页后同时执行一下<code>git push</code>来保持文件的同步</p>          </div><h2 id="可能会遇到的问题"><a href="#可能会遇到的问题" class="headerlink" title="可能会遇到的问题"></a>可能会遇到的问题</h2><div class="note note-danger">            <p>在这个过程中可能会遇到<code>hexo g</code>等命令不起作用的情况，hexo提示的命令也变少了.</p>          </div><div class="note note-info">            <p>这个时候你就要观察你执行命令的目录是否是你博客真正对应的目录。<br>比如我执行完上述操作后，我的博客目录应该是yangyihui2020.github.io，而不是blogs。<br>你必须要在博客对应目录下执行对应操作才行。 </p>          </div>]]></content>
    
    
    <categories>
      
      <category>essays</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks</title>
    <link href="/2025/02/24/ReadingNotes/rag/Retrieval-Augmented%20Generation%20for%20%20Knowledge-Intensive%20NLP%20Tasks/"/>
    <url>/2025/02/24/ReadingNotes/rag/Retrieval-Augmented%20Generation%20for%20%20Knowledge-Intensive%20NLP%20Tasks/</url>
    
    <content type="html"><![CDATA[<h1 id="RAG-检索增强生成技术背景介绍"><a href="#RAG-检索增强生成技术背景介绍" class="headerlink" title="RAG 检索增强生成技术背景介绍"></a>RAG 检索增强生成技术背景介绍</h1><p>RAG（Retrieval-Augmented Generation，检索增强生成） 是一种结合了信息检索技术与语言生成模型的人工智能技术。该技术通过从外部知识库中检索相关信息，并将其作为提示（Prompt）输入给大型语言模型（LLMs），以增强模型处理知识密集型任务的能力，如问答、文本摘要、内容生成等。RAG模型由Facebook AI Research（FAIR）团队于2020年首次提出，并迅速成为大模型应用中的热门方案。</p><p>RAG一般有3个步骤：</p><ol><li><p>检索：检索是RAG流程的第一步，从预先建立的知识库中检索与问题相关的信息。这一步的目的是为后续的生成过程提供有用的上下文信息和知识支撑。</p></li><li><p>增强：RAG中增强是将检索到的信息用作生成模型（即大语言模型）的上下文输入，以增强模型对特定问题的理解和回答能力。这一步的目的是将外部知识融入生成过程中，使生成的文本内容更加丰富、准确和符合用户需求。通过增强步骤，LLM模型能够充分利用外部知识库中的信息。</p></li><li><p>生成：生成是RAG流程的最后一步。这一步的目的是结合LLM生成符合用户需求的回答。生成器会利用检索到的信息作为上下文输入，并结合大语言模型来生成文本内容。</p></li></ol><h1 id="RAG-Retrieval-Augmented-Generation-for-Knowledge-Intensive-NLP-Tasks"><a href="#RAG-Retrieval-Augmented-Generation-for-Knowledge-Intensive-NLP-Tasks" class="headerlink" title="RAG Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks"></a>RAG Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks</h1><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2><p>这篇文章的研究背景是大型预训练语言模型虽然能够在下游NLP任务中存储事实性知识并取得优异表现，但在访问和精确操作知识方面仍然有限。因此，在知识密集型任务中，这些模型的表现落后于特定任务的架构。此外，提供决策的可追溯性和更新世界知识仍然是开放的研究问题。</p><p>文章着眼于此，提出的RAG模型通过结合预训练的参数化记忆和非参数化记忆，在知识密集型NLP任务中取得了显著的性能提升。</p><h2 id="研究方法"><a href="#研究方法" class="headerlink" title="研究方法"></a>研究方法</h2><p>这篇论文提出了两种RAG模型：RAG-Sequence和RAG-Token，用于解决知识密集型任务中的生成问题：</p><ol><li><p>​**RAG-Sequence模型:**​ 该模型使用相同的检索文档来生成整个序列。它将检索到的文档视为一个单一的潜在变量，并通过top-K近似来边缘化以获得seq2seq概率。</p></li><li><p>​**RAG-Token模型:**​ 该模型为每个目标标记抽取不同的潜在文档，并相应地进行边缘化。这允许生成器在生成答案时从多个文档中选择内容。</p></li></ol><p>检索器使用DPR（Dense Passage Retriever）作为检索组件，采用双向编码器架构，通过最大内积搜索（MIPS）问题近似求解top-K文档。</p><p>生成器：使用BART-large作为生成器组件，通过连接输入和检索内容来生成输出。</p><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>实验采用了多个知识密集型NLP任务的数据集，包括自然问题（NQ）、TriviaQA（TQA）、WebQuestions（WQ）、CuratedTrec（CT）、MS-MARCO、Jeopardy问题生成和FEVER。</p><div class="note note-info">            <p>这篇论文还是很值得一读的，等后续时间充足了再来补一下精读的文档</p>          </div>]]></content>
    
    
    <categories>
      
      <category>ReadingNotes</category>
      
      <category>rag</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>用hexo+fluid配置个人博客</title>
    <link href="/2025/02/22/essays/Hexo/%E7%94%A8hexo+fluid%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/02/22/essays/Hexo/%E7%94%A8hexo+fluid%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p> 在开始之前，你需要先参考<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a>进行安装、建站。</p><h2 id="然后设置你的主题为fluid："><a href="#然后设置你的主题为fluid：" class="headerlink" title="然后设置你的主题为fluid："></a>然后设置你的主题为fluid：</h2><ul><li><p>进入博客目录执行命令：<code>npm install --save hexo-theme-fluid</code></p></li><li><p>修改 Hexo 博客目录下<code>_config.yml</code>中的对应参数：</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题为fluid</span><br></code></pre></td></tr></table></figure><h1 id="开始新文档创建"><a href="#开始新文档创建" class="headerlink" title="开始新文档创建"></a>开始新文档创建</h1><h2 id="创建关于页"><a href="#创建关于页" class="headerlink" title="创建关于页"></a>创建<code>关于页</code></h2><ul><li><p>在博客目录下执行命令：<code>hexo new page about</code></p></li><li><p>创建成功后修改 <code>/source/about/index.md</code>，在其中添加 <code>layout</code> 属性。</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><div class="note note-info">            <p>根据官方文档，<code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p><p>一般<code>关于页</code>可以介绍你的个人资料</p>          </div><h2 id="创建新的文章并为其归类。（这里的做法为个人偏好，仅供参考）"><a href="#创建新的文章并为其归类。（这里的做法为个人偏好，仅供参考）" class="headerlink" title="创建新的文章并为其归类。（这里的做法为个人偏好，仅供参考）"></a>创建新的文章并为其归类。（这里的做法为个人偏好，仅供参考）</h2><p>我现在需要写一篇名为<code>用hexo+fluid配置个人博客</code>的文章，我想给其分类到<code>随笔</code>下的<code>Hexo</code>小类中，这里我就用到了hexo的二级导航功能。具体做法如下：</p><h3 id="生成“分类”页并添加tpye属性"><a href="#生成“分类”页并添加tpye属性" class="headerlink" title="生成“分类”页并添加tpye属性"></a>生成“分类”页并添加tpye属性</h3><ul><li><p>进入博客所在文件夹。执行命令：<code>hexo new page categories</code></p></li><li><p>修改博客目录下的<code>source/categories/index.md</code>为：</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-02-22 19:55:44</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">categories</span> <span class="hljs-comment">#添加这一行代码到原md文件中</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="创建随笔-Hexo类别："><a href="#创建随笔-Hexo类别：" class="headerlink" title="创建随笔\Hexo类别："></a>创建<code>随笔\Hexo</code>类别：</h3><ul><li><p>在 <code>source/categories</code> 文件夹下创建一个名为 <code>essay</code> 的文件夹,再在<code>essay</code>文件夹内新建<code>Hexo</code>文件夹</p></li><li><p>在<code>source/categories/essay/和</code> <code>source/categories/essay/Hexo</code> 文件夹下均创建一个名为 <code>index.md</code> 的文件，内容如下</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-02-22 19:57:44</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">categories</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><ul><li>修改主题目录下的<code>_config.yaml</code>文件中的menu属性，它将影响到网页中的菜单栏，修改为：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;home&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-home-fill&quot;</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;随笔&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/essay/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont book icon-book&quot;</span>,<br>    <span class="hljs-attr">submenu:</span> [&#123;<span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;Hexo用户笔记&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/categories/essay/Hexo/&#x27;</span>&#125;,],&#125;<br>  <span class="hljs-comment"># 设置你的多级目录以及设置key的值作为菜单栏中展示的分类名</span><br>  <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;about&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/about/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-user-fill&quot;</span>,&#125;<br>  <span class="hljs-comment">#- &#123; key: &quot;archive&quot;, link: &quot;/archives/&quot;, icon: &quot;iconfont icon-archive-fill&quot; &#125;</span><br>  <span class="hljs-comment">#- &#123; key: &quot;categories&quot;, link: &quot;/categories/&quot;, icon: &quot;iconfont icon-category-fill&quot;, &#125;</span><br>  <span class="hljs-comment">#- &#123; key: &quot;tag&quot;, link: &quot;/tags/&quot;, icon: &quot;iconfont icon-tags-fill&quot; &#125;</span><br>  <span class="hljs-comment">#- &#123; key: &quot;links&quot;, link: &quot;/links/&quot;, icon: &quot;iconfont icon-link-fill&quot; &#125;</span><br></code></pre></td></tr></table></figure><div class="note note-info">            <p>注意，我这里注释掉了不必要的菜单栏</p>          </div><h3 id="创建新的文章并归类"><a href="#创建新的文章并归类" class="headerlink" title="创建新的文章并归类:"></a>创建新的文章并归类:</h3><ul><li><p>在<code>source\_posts</code>目录下新建<code>essays\Hexo</code>目录结构</p></li><li><p>执行<code>hexo new 用hexo+fluid配置个人博客 -p essays\Hexo\用hexo+fluid配置个人博客</code></p></li><li><p>修改<code>source\_posts\essays\Hexo\用hexo+fluid配置个人博客.md</code>中的内容为：</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">用hexo+fluid配置个人博客</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-02-23 14:36:55</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-attr">categories:</span> [<span class="hljs-string">essay</span>,<span class="hljs-string">Hexo</span>] <span class="hljs-comment">#加上这一栏即可</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>  执行完上述一系列操作之后，你将得到这样一个界面：</p><p>  <img src="/images/image-20250223144908444.jpg"></p><p>  然后你就可以编辑<code>用hexo+fluid配置个人博客.md</code>中的内容作为你的第一篇博客了。</p>]]></content>
    
    
    <categories>
      
      <category>essays</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
